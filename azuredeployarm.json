{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environment": {
      "type": "string"
    },
    "projectName": {
      "defaultValue": "mypocproject",
      "type": "string"
    },
    "keyvaultsku": {
      "defaultValue": {},
      "type": "object"
    },
    "servicePrincipleObjectId": {
      "type": "string"
    },
    "sku": {
      "type": "string",
      "defaultValue": "P1v2",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "metadata": {
        "description": "Describes plan's pricing tier and instance size."
      }
    },
    "logAnalyticsWorkspaceSku": {
      "type": "string",
      "defaultValue": "pergb2018",
      "allowedValues": [
        "pergb2018",
        "Free",
        "Standalone",
        "PerNode",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Pricing tier: PerGB2018 or legacy tiers (Free, Standalone, PerNode, Standard or Premium) which are not available to all customers."
      }
    },
    "resourcePermissions": {
      "type": "bool",
      "metadata": {
        "description": "true to use resource or workspace permissions. false to require workspace permissions."
      }
    }
  },
  "variables": {
    "siteName": "eaus",
    "keyVaultName": "[concat(variables('siteName'),'kv', parameters('environment'), parameters('projectName'), '1')]",
    "appServiceName": "[concat(variables('siteName'),'-app-', parameters('environment'), '-', parameters('projectName'), '-001')]",
    "appServicePlanName": "[concat(variables('siteName'),'-plan-',parameters('environment'),'-',parameters('projectName'),'-001')]",
    "appInsightName": "[concat(variables('siteName'),'-appi-', parameters('environment'), '-', parameters('projectName'), '-001')]",
    "workspaceName": "[concat(variables('siteName'),'-log-analytics-', parameters('projectName'), '-001')]"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[resourcegroup().location]",
      "properties": {
        "sku": "[parameters('keyvaultsku')]",
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('servicePrincipleObjectId')]",
            "permissions": {
              "keys": [
                "get",
                "list",
                "update",
                "create",
                "import",
                "delete"
              ],
              "secrets": [
                "get",
                "list",
                "set",
                "delete"
              ],
              "certificates": [
                "get",
                "list",
                "update",
                "create",
                "import",
                "delete"
              ]
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": "30"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[resourcegroup().location]",
      "sku": {
        "name": "[parameters('sku')]"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightName')]",
      "location": "[resourcegroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[variables('appServiceName')]",
      "location": "[resourcegroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "netFrameworkVersion": "v4.5",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightName')), '2015-05-01').ConnectionString]"
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_Mode",
              "value": "default"
            },
            {
              "name": "webpages:Version",
              "value": "3.0.0.0"
            },
            {
              "name": "webpages:Enabled",
              "value": "false"
            },
            {
              "name": "ClientValidationEnabled",
              "value": "true"
            },
            {
              "name": "UnobtrusiveJavaScriptEnabled",
              "value": "true"
            },
            {
              "name": "ProductPresentationType",
              "value": "SD"
            },
            {
              "name": "FRGItemRows",
              "value": "5000"
            },
            {
              "name": "DefaultFRGItemLevel",
              "value": "M3"
            },
            {
              "name": "owin:AutomaticAppStartup",
              "value": "false"
            },
            {
              "name": "Environment",
              "value": "[parameters('environment')]"
            }
          ],
          "metadata": [
            {
              "name": "CURRENT_STACK",
              "value": "dotnet"
            }
          ],
          "use32BitWorkerProcess": false
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "name": "[variables('workspaceName')]",
      "apiVersion": "2022-10-01",
      "location": "[resourcegroup().location]",
      "properties": {
        "sku": {
          "name": "[parameters('logAnalyticsWorkspaceSku')]"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": "[parameters('resourcePermissions')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/providers/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "name": "[concat(variables('appServiceName'),'/Microsoft.Insights/', 'diagnosticSetting')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('appServiceName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
      ],
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', variables('workspaceName'))]",
        "logs": [
          {
            "category": "AppServiceHTTPLogs",
            "enabled": true
          },
          {
            "category": "AppServiceConsoleLogs",
            "enabled": true
          },
          {
            "category": "AppServiceAppLogs",
            "enabled": true
          },
          {
            "category": "AppServiceAuditLogs",
            "enabled": true
          },
          {
            "category": "AppServiceIPSecAuditLogs",
            "enabled": true
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true
          }
        ]
      }
    }
  ],
  "outputs": {}
}
